{
  "version": 3,
  "sources": ["../src/index.tsx"],
  "sourcesContent": ["const getLineColor = (opacity: number) => `rgba(100,100,100,${opacity})`;\n\nconst createLine = (\n  context: CanvasRenderingContext2D,\n  x1: number,\n  y1: number,\n  x2: number,\n  y2: number,\n  opacity: number\n) => {\n  context.strokeStyle = getLineColor(opacity);\n  context.beginPath();\n  context.moveTo(x1, y1);\n  context.lineTo(x2, y2);\n  context.stroke();\n};\n\nconst dotRadius = 3;\n\nconst createDot = (context: CanvasRenderingContext2D, dot: Dot) => {\n  context.fillStyle = getLineColor(1);\n  context.beginPath();\n  context.arc(dot.x, dot.y, dotRadius, 0, 2 * Math.PI, false);\n  context.fill();\n};\n\nconst numberOfDots = 100;\nconst dotSpeed = 0.1;\nconst getDotSpeed = () => Math.random() * dotSpeed * 2 - dotSpeed;\n\ntype Point = {\n  x: number,\n  y: number,\n}\n\ntype Link = {\n  dot1: Dot,\n  dot2: Dot,\n  weight: number,\n};\n\ntype Dot = Point & {\n  xSpeed: number,\n  ySpeed: number,\n  links: Link[],\n};\n\nexport const create = (selector: string) => {\n  const canvas = document.querySelector<HTMLCanvasElement>(selector)!;\n\n  // Get dimensions and keep them up to date.\n  let width: number;\n  let height: number;\n  const getDimensions = () => {\n    width = canvas.clientWidth;\n    height = canvas.clientHeight;\n    canvas.setAttribute(\"width\", width.toString());\n    canvas.setAttribute(\"height\", height.toString());\n  };\n  getDimensions();\n  window.onresize = getDimensions;\n\n  // Create dots.\n  const dots = Array(numberOfDots)\n    .fill(undefined)\n    .map<Dot>(() => ({\n      x: Math.random() * width,\n      y: Math.random() * height,\n      xSpeed: getDotSpeed(),\n      ySpeed: getDotSpeed(),\n      links: [],\n    }));\n\n  // Create links between all elements.\n  dots.forEach((current, index, all) => {\n    all\n      .slice(index + 1)\n      .map<Link>((other) => ({\n        dot1: current,\n        dot2: other,\n        weight: 0,\n      }))\n      .forEach((link) => {\n        link.dot1.links.push(link);\n        link.dot2.links.push(link);\n      });\n  });\n\n  const context = canvas.getContext(\"2d\")!;\n\n  const tick = (oldTime: number) => {\n    window.requestAnimationFrame(() => {\n      context.clearRect(0, 0, width, height);\n      const newTime = Date.now();\n      const deltaTime = newTime - oldTime;\n      updateDots(dots, width, height, deltaTime, context);\n      updateLinks(dots, width, height, deltaTime, context);\n      tick(newTime);\n    });\n  };\n  tick(Date.now());\n};\n\nconst updateCoordinate = (current: number, delta: number, max: number) => {\n  return (current + delta + max) % max;\n};\nconst updateDots = (dots: Dot[], width: number, height: number, deltaTime: number, context: CanvasRenderingContext2D) => {\n  dots.forEach((dot) => {\n    dot.x = updateCoordinate(dot.x, dot.xSpeed * deltaTime, width);\n    dot.y = updateCoordinate(dot.y, dot.ySpeed * deltaTime, height);\n    createDot(context, dot);\n  });\n};\n\nconst getDifference = (a: number, b: number) => Math.min(Math.abs(a - b), Math.abs(b - a));\n\nconst getTorusDistance = (a: number, b: number, wrap: number) => {\n  const distance = Math.abs(a - b);\n  return distance > wrap / 2 ? wrap - distance : distance;\n};\n\nconst getDistance = (a: Point, b: Point, width: number, height: number) => {\n  const distanceX = getTorusDistance(a.x, b.x, width);\n  const distanceY = getTorusDistance(a.y, b.y, height);\n  return Math.sqrt(Math.pow(distanceX, 2) + Math.pow(distanceY, 2));\n};\n\nconst decay = 0.001;\nconst linksPerDot = 2;\n\nconst updateLinks = (dots: Dot[], width: number, height: number, deltaTime: number, context: CanvasRenderingContext2D) => {\n  const closeLinks = dots.reduce<Link[]>((previous, dot) => {\n    const sorted = dot.links.sort((a, b) => {\n      const distanceA = getDistance(\n        dot,\n        a.dot1 === dot ? a.dot2 : a.dot1,\n        width,\n        height\n      );\n      const distanceB = getDistance(\n        dot,\n        b.dot1 === dot ? b.dot2 : b.dot1,\n        width,\n        height\n      );\n      return distanceA - distanceB;\n    });\n    return previous.concat(sorted.slice(0, linksPerDot));\n  }, []);\n\n  const deltaDecay = decay * deltaTime;\n  dots.forEach((dot) => {\n    dot.links\n      .filter((link) => link.dot1 === dot)\n      .forEach((link, index, all) => {\n        if (closeLinks.indexOf(link) > 0) {\n          link.weight = Math.min(1, link.weight + deltaDecay);\n        } else {\n          link.weight = Math.max(0, link.weight - deltaDecay);\n        }\n\n        if (link.weight > 0) {\n          const spansWidth =\n            getDifference(link.dot1.x, link.dot2.x) > width / 2;\n          const spansHeight =\n            getDifference(link.dot1.y, link.dot2.y) > height / 2;\n\n          if (!spansWidth && !spansHeight) {\n            createLine(\n              context,\n              link.dot1.x,\n              link.dot1.y,\n              link.dot2.x,\n              link.dot2.y,\n              link.weight\n            );\n          } else {\n            const is1Left = link.dot1.x < link.dot2.x;\n            const is1Above = link.dot1.y < link.dot2.y;\n            const overlapX = spansWidth ? width : 0;\n            const overlapY = spansHeight ? height : 0;\n            createLine(\n              context,\n              link.dot1.x,\n              link.dot1.y,\n              link.dot2.x + (is1Left ? -overlapX : overlapX),\n              link.dot2.y + (is1Above ? -overlapY : overlapY),\n              link.weight\n            );\n            createLine(\n              context,\n              link.dot1.x + (is1Left ? overlapX : -overlapX),\n              link.dot1.y + (is1Above ? overlapY : -overlapY),\n              link.dot2.x,\n              link.dot2.y,\n              link.weight\n            );\n          }\n        }\n      });\n  });\n};\n\nwindow.onload = () => create(\"#target\");"],
  "mappings": "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",
  "names": []
}
